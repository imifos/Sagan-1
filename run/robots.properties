# ==============================================================================
# SAGAN Robots
# ==============================================================================
# This is where you can define the available robots. You can add many robots 
# with different names and parameters, but the type (modelid) must be one of the 
# supported ones (working on more):
#
# - rp6 (http://www.arexx.com/rp6/)
# - hopper (just for fun)
# - lego1 (Lego Mindstorm NXT, unmodified, using the standard operating 
#          system, with out without compass sensor)
# ==============================================================================

# List all robots defined below that should appear in the selection screen.
robot.list=robot1,robot2,robot3,robot4,robot5,robot6

#_ SAMPLE _____________________________________

# Note: if you would like to activate this robot configuration, you would need to add 
# 'robotSAMPLE' in the 'robot.list' above. 

# Name appearing on the selection screen.
robotSAMPLE.name=My Robot

# Model of the robot, used to select the cross-compiler. Must be one of the 
# values specified in the header of this file.
robotSAMPLE.modelid=rp6

# Optional bitmap of a picture that appears in the selection screen.
robotSAMPLE.picture=./Robots/tiktok.bmp

# You can change the default RP6 Encoder resolution setting of 0.25mm to another 
# value if you measured different resolution for your encoders. To find the right 
# value, command the robot to advance 2m and find the resolution that makes the 
# robot perfectly advance 2m.
robotSAMPLE.rp6.calibration.encoder_resolution=0.25

# Defines a Factor for the rotation error. The rotation is unprecise
# because of wheel/track slippery. This factor allows you to make it roughly precise. 
# IMPORTANT: Has to be done on the underground on which the robot actually operates!
# To find the right value, command the robot to turn 360\u00b0 and find the factor that 
# makes the robot perfectly turn 360\u00b0
robotSAMPLE.rp6.calibration.rotation_factor=730

# Time in ms to make a rotation of {config.nxt.execution.calibration.angle.degree} degrees.
# This value strongly depends on the underground the robot is working
# (due to the viscous drag/frictional resistance) so you must calibrate 
# this value by trial and error, for each robot.
# NOTE: this does NOT apply if the NXT uses a compass sensor.
# Coarse/foamed polystyrene: ~8500, Glossy/varnish: ~7200
robotSAMPLE.nxt.calibration.fullrotation.time=8500

# Time to move forward exactly {config.nxt.execution.calibration.distance.mm} millimeters.
# This value depends on the underground the robot is working so you must 
# calibrate this value by trial and error, for each robot.
robotSAMPLE.nxt.calibration.onemeter.time=11400

# Set to true of the NXT is using a compass sensor, which is recommended.
robotSAMPLE.nxt.uses.compass.sensor=true

# In case of usage of the NXT compass sensor, we can chose a slow high precision mode
# or a normal less precise rotation mode.
robotSAMPLE.nxt.uses.compass.highprecision.rotation=false;


#_____________________________________
robot1.name=Tik-Tok
robot1.modelid=rp6
robot1.picture=./Robots/tiktok.bmp

robot1.rp6.calibration.encoder_resolution=0.25
robot1.rp6.calibration.rotation_factor=730
robot1.nxt.calibration.fullrotation.time=
robot1.nxt.calibration.onemeter.time=
robot1.nxt.uses.compass.sensor=
robot1.nxt.uses.compass.highprecision.rotation=

#_____________________________________
robot2.name=R2D2
robot2.modelid=rp6
robot2.picture=./Robots/r2d2.bmp

robot2.rp6.calibration.encoder_resolution=0.228
robot2.rp6.calibration.rotation_factor=730
robot2.nxt.calibration.fullrotation.time=
robot2.nxt.calibration.onemeter.time=
robot2.nxt.uses.compass.sensor=    
robot2.nxt.uses.compass.highprecision.rotation=

#_____________________________________
robot3.name=Wall-E
robot3.modelid=rp6
robot3.picture=./Robots/walle.bmp

robot3.rp6.calibration.encoder_resolution=0.229
robot3.rp6.calibration.rotation_factor=700
robot3.nxt.calibration.fullrotation.time=
robot3.nxt.calibration.onemeter.time=
robot3.nxt.uses.compass.sensor=
robot3.nxt.uses.compass.highprecision.rotation= 

#_____________________________________
robot4.name=Hopper
robot4.modelid=hopper
robot4.picture=

robot4.rp6.calibration.encoder_resolution=
robot4.rp6.calibration.rotation_factor=
robot4.nxt.calibration.fullrotation.time=
robot4.nxt.calibration.onemeter.time=
robot4.nxt.uses.compass.sensor=
robot4.nxt.uses.compass.highprecision.rotation=

#_____________________________________
robot5.name=Lego-1 Rover
robot5.modelid=lego1
robot5.picture=./Robots/lego2compass.bmp

robot5.rp6.calibration.encoder_resolution=
robot5.rp6.calibration.rotation_factor=
robot5.nxt.calibration.fullrotation.time=8500
robot5.nxt.calibration.onemeter.time=11400
robot5.nxt.uses.compass.sensor=true
robot5.nxt.uses.compass.highprecision.rotation=true

#_____________________________________
robot6.name=Lego-2 Plingomat (no Compass)
robot6.modelid=lego1
robot6.picture=./Robots/lego1.bmp

robot6.rp6.calibration.encoder_resolution=
robot6.rp6.calibration.rotation_factor=
robot6.nxt.calibration.fullrotation.time=8800
robot6.nxt.calibration.onemeter.time=11700
robot6.nxt.uses.compass.sensor=false
robot6.nxt.uses.compass.highprecision.rotation=
